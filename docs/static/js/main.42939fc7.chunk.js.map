{"version":3,"sources":["components/contacts/contact-item/ContactItem.js","components/contacts/contact-form/ContactForm.js","components/contacts/contact-list/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactItem","id","name","email","avatar","phone","onDeleteContact","className","src","alt","role","onClick","defaultProps","PHONE_PATTERN","EMAIL_PATTERN","validations","value","message","test","ContactForm","state","contact","faker","image","errors","event","inputName","target","console","log","this","setState","prevState","undefined","Object","keys","some","key","preventDefault","isFormValid","datatype","uuid","props","onCreateContact","onSubmit","handleSubmit","type","placeholder","onChange","handleInputChange","handleRandomAvatarClick","disabled","Component","ContactList","contacts","contactsData","filter","handleCreateContact","map","handleDeleteContact","handleResetContacts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42939fc7.chunk.js","sourcesContent":["\nimport './ContactItem.css';\n\nfunction ContactItem({ id, name, email, avatar, phone, onDeleteContact }) {\n  return (\n    <div className=\"ContactItem d-flex\">\n      <div className=\"me-auto d-flex\">\n        <img src={avatar} alt={name} className=\"avatar align-self-start img-fluid w-100 rounded-circle me-3\" />\n        <div className=\"d-flex flex-column\">\n          <h5 className=\"mb-1\">{name}</h5>\n          { email && <p className=\"m-0 text-muted\"><i className=\"fa fa-envelope fa-fw me-1\" />{email}</p> }\n          { phone && <p className=\"m-0 text-muted\"><i className=\"fa fa-phone fa-fw me-1\" />{phone}</p> }\n        </div>\n      </div>\n      <div>\n        <i className=\"fa fa-times text-danger\" role=\"button\" onClick={() => onDeleteContact(id)}></i>\n      </div>\n    </div>\n  );\n}\n\nContactItem.defaultProps = {\n  onDeleteContact: () => {}\n}\n\nexport default ContactItem;\n","import { Component } from 'react';\nimport faker from 'faker';\n\nconst PHONE_PATTERN = /^\\d{6,10}$/;\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nconst validations = {\n  name: (value) => {\n    let message;\n    if (!value) {\n      message = 'Name is required';\n    }\n    return message;\n  },\n  phone: (value) => {\n    let message;\n    if (value && !PHONE_PATTERN.test(value)) {\n      message = 'Phone number is not valid';\n    }\n    return message;\n  },\n  email: (value) => {\n    let message;\n    if (value && !EMAIL_PATTERN.test(value)) {\n      message = 'Email is not valid';\n    }\n    return message;\n  }\n}\n\n\nclass ContactForm extends Component {\n\n  state = {\n    contact: {\n      name: '',\n      phone: '',\n      email: '',\n      avatar: faker.image.avatar()\n    },\n    errors: {\n      name: validations.name(''),\n      phone: validations.phone(''),\n      email: validations.email('')\n    }\n  }\n\n  handleInputChange(event) {\n    const inputName = event.target.name;\n    const value = event.target.value;\n    console.log('target', event.target);\n    console.log('inputName', inputName);\n    console.log('value', value);\n    this.setState((prevState) => ({\n      contact: {\n        ...prevState.contact,\n        [inputName]: value,\n      },\n      errors: {\n        ...prevState.errors,\n        [inputName]: validations[inputName] ? validations[inputName](value) : undefined,\n      }\n    }))\n  }\n\n  handleRandomAvatarClick() {\n    this.setState(({ contact }) => ({\n      contact: {\n        ...contact,\n        avatar: faker.image.avatar()\n      }\n    }))\n  }\n\n  isFormValid() {\n    const { errors } = this.state;\n    return !Object.keys(errors).some(key => errors[key] !== undefined);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.isFormValid()) {\n      const { contact } = this.state;\n      contact.id = faker.datatype.uuid();\n\n      this.props.onCreateContact(contact);\n    }\n    \n  }\n\n  render() {\n    const { contact, errors } = this.state;\n    return (\n      <div className=\"row mb-3\">\n        <div className=\"col-12 col-sm-2\">\n          <img src={contact.avatar} alt=\"Avatar\" className=\"img-thumbnail w-100\"/>\n        </div>\n        <div className=\"col-12 col-sm-10\">\n          <form onSubmit={(event) => this.handleSubmit(event)}>\n\n            <div className=\"input-group mb-1\">\n              <span className=\"input-group-text\"><i className=\"fa fa-user fa-fw\" /></span>\n              <input name=\"name\" type=\"text\" className={`form-control ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Name..\" value={contact.name}\n                onChange={(event) => this.handleInputChange(event)} />\n              {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n            </div>\n\n            <div className=\"input-group mb-1\">\n              <span className=\"input-group-text\"><i className=\"fa fa-phone fa-fw\" /></span>\n              <input name=\"phone\" type=\"text\" className={`form-control ${errors.phone ? 'is-invalid' : ''}`} placeholder=\"Phone number (650..)\" value={contact.phone}\n                onChange={(event) => this.handleInputChange(event)} />\n              {errors.phone && <div className=\"invalid-feedback\">{errors.phone}</div>}\n            </div>\n\n            <div className=\"input-group mb-1\">\n              <span className=\"input-group-text\"><i className=\"fa fa-envelope fa-fw\" /></span>\n              <input name=\"email\" type=\"text\" className={`form-control ${errors.email ? 'is-invalid' : ''}`} placeholder=\"example@example.org\" value={contact.email}\n                onChange={(event) => this.handleInputChange(event)} />\n              {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n            </div>\n\n            <div className=\"input-group mb-1\">\n              <span className=\"input-group-text\"><i className=\"fa fa-picture-o fa-fw\" /></span>\n              <input name=\"avatar\" type=\"text\" className={`form-control ${errors.avatar ? 'is-invalid' : ''}`} placeholder=\"Image url...\" value={contact.avatar}\n                onChange={(event) => this.handleInputChange(event)} />\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.handleRandomAvatarClick()}><i className=\"fa fa-refresh fa-fw\" /></button>\n              {errors.avatar && <div className=\"invalid-feedback\">{errors.avatar}</div>}\n            </div>\n\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-sm-4\">\n                <button className=\"btn btn-primary w-100\" disabled={!this.isFormValid()}>create contact</button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nContactForm.defaultProps = {\n  onCreateContact: () => {}\n}\n\n\nexport default ContactForm;\n\n","import { Component } from 'react';\nimport ContactItem from '../contact-item/ContactItem';\nimport contactsData from '../../../data/contacts.json';\nimport ContactForm from '../contact-form/ContactForm';\n\nclass ContactList extends Component {\n\n  state = {\n    contacts: []\n  }\n\n  componentDidMount() {\n    this.setState({ contacts: contactsData })\n  }\n\n  handleDeleteContact(id) {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id)\n    }))\n  }\n\n  handleResetContacts() {\n    this.setState({ contacts: contactsData })\n  }\n\n  handleCreateContact(contact) {\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts]\n    }))\n  }\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      contacts &&\n        <>\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <ContactForm onCreateContact={(contact) => this.handleCreateContact(contact)}/>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <ul className=\"list-group\">\n                {contacts.map(contact =>\n                  <li key={contact.id} className=\"list-group-item list-group-item-action\">\n                    <ContactItem {...contact} onDeleteContact={(id) => this.handleDeleteContact(id)} />\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12 col-md-4\">\n              <button className=\"btn btn-primary w-100\" onClick={() => this.handleResetContacts()}>restart contacts</button>\n            </div>\n          </div>\n        </>\n    );\n  }\n\n}\n\nexport default ContactList;\n","\nimport ContactList from './components/contacts/contact-list/ContactList';\n\nfunction App() {\n  return (\n    <div className=\"container py-5\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}